//// [tests/cases/compiler/001_magic.ts] ////

=== 001_magic.ts ===
import { ImportedType } from "./001_magic_imported";
>ImportedType : Symbol(ImportedType, Decl(001_magic.ts, 0, 8))

// import { MagicType } from "./001_magic_magic";

const localValue: LocalType = {
>localValue : Symbol(localValue, Decl(001_magic.ts, 3, 5))
>LocalType : Symbol(LocalType, Decl(001_magic.ts, 13, 1))

    someProp: "boring"
>someProp : Symbol(someProp, Decl(001_magic.ts, 3, 31))

};

const refValue: ImportedType = {
>refValue : Symbol(refValue, Decl(001_magic.ts, 7, 5))
>ImportedType : Symbol(ImportedType, Decl(001_magic.ts, 0, 8))

    someNumProp: 42
>someNumProp : Symbol(someNumProp, Decl(001_magic.ts, 7, 32))

};

const magicValue: MagicType = {
>magicValue : Symbol(magicValue, Decl(001_magic.ts, 11, 5))
>MagicType : Symbol(MagicType)

    someMagicProp: "abraka dabra"
>someMagicProp : Symbol(someMagicProp, Decl(001_magic.ts, 11, 31))
}

interface LocalType {
>LocalType : Symbol(LocalType, Decl(001_magic.ts, 13, 1))

    someProp: string
>someProp : Symbol(LocalType.someProp, Decl(001_magic.ts, 15, 21))
}
